name: CI

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arch:
          - x64
          - x86
        node:
          - 12
          - 14
          - 16
        os:
          - macos-11
          - ubuntu-18.04
          - windows-latest
        exclude:
          - arch: x86
            os: macos-11
          - arch: x86
            os: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.arch }}
      - run: npm install
      - run: npm test
      - run: npm run prebuild
        if:
          matrix.node == 14 && matrix.os != 'macos-11' && startsWith(github.ref,
          'refs/tags/')
      - run: npm run prebuild-darwin-x64+arm64
        if:
          matrix.node == 14 && matrix.os == 'macos-11' && startsWith(github.ref,
          'refs/tags/')
      - uses: actions/upload-artifact@v2
        if: matrix.node == 14 && startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ matrix.os }}
          path: prebuilds
          retention-days: 1
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: prebuilds
      - run: echo ::set-output name=version::$(git describe --tags)
        id: get_version
      - run:
          tar -cvf "${{ steps.get_version.outputs.version
          }}-darwin-x64+arm64.tar" -C "prebuilds/macos-11" .
      - run:
          tar -cvf "${{ steps.get_version.outputs.version }}-linux-x64.tar" -C
          "prebuilds/ubuntu-18.04" linux-x64
      - run:
          tar -cvf "${{ steps.get_version.outputs.version }}-win32-ia32.tar" -C
          "prebuilds/windows-latest" win32-ia32
      - run:
          tar -cvf "${{ steps.get_version.outputs.version }}-win32-x64.tar" -C
          "prebuilds/windows-latest" win32-x64
      - uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.get_version.outputs.version }}-*.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
